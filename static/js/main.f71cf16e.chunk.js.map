{"version":3,"sources":["logo.svg","ImageBook/ImageBook.jsx","DemoBlock.jsx","App.js","reportWebVitals.js","index.js"],"names":["PageCover","React","forwardRef","props","ref","className","pos","data-density","children","Page","density","imageCaption","undefined","image","alt","src","onClick","console","log","onLoad","e","target","style","width","height","isNaN","number","ImageBook","nextButtonClick","flipBook","getPageFlip","flipNext","prevButtonClick","flipPrev","renderFullScreen","document","getElementsByTagName","requestFullscreen","onPage","setState","page","data","onChangeOrientation","orientation","onChangeState","state","pages","padding","process","totalPage","this","getPageCount","maxHeight","maxWidth","display","flexDirection","alignItems","position","minWidth","minHeight","maxShadowOpacity","showCover","mobileScrollSupport","onFlip","backgroundImage","el","type","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f71cf16e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport HTMLFlipBook from \"react-pageflip\";\r\n\r\nconst PageCover = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className={\"page page-cover page-cover-\" + props.pos} ref={ref} data-density=\"hard\" >\r\n      <div className=\"page-content\" >\r\n        <h2>{props.children} </h2>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Page = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className=\"page\" ref={ref} data-density={props.density | \"soft\"}>\r\n      <div className=\"page-content\">\r\n        <h2 className=\"page-header\">{props.imageCaption}</h2>\r\n        {/* {(props.image !== undefined) ?\r\n          <div\r\n            className=\"page-image\"\r\n            style={{ backgroundImage: \"url(\" + props.image + \")\" }}\r\n            onClick={showFullImage}\r\n          ></div> : null\r\n        } */}\r\n        {(props.image !== undefined) ?\r\n          <div className=\"page-image\">\r\n            <img\r\n              alt={props.imageCaption}\r\n              src={props.image}\r\n              // style={{ backgroundImage: \"url(\" + props.image + \")\", objectFit: 'contain' }}\r\n              onClick={showFullImage}\r\n              onLoad={setDimensions}\r\n            ></img>\r\n          </div>\r\n          : null\r\n        }\r\n        {/* <figcaption>{props.imageCaption}</figcaption> */}\r\n        {(props.children) ? <div className=\"page-text\">{props.children}</div> : null}\r\n        <div className=\"page-footer\">{isNaN(props.number) ? '' : props.number}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  function setDimensions(e) {\r\n    e.target.style = (e.target.width > e.target.height) ? 'width: 100%' : 'height: 100%';\r\n    console.log(e);\r\n  }\r\n\r\n  function showFullImage() {\r\n    console.log('click');\r\n  }\r\n});\r\n\r\nclass ImageBook extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const pages = [\r\n      <PageCover key={0} pos=\"top\">Alim Adilov képeskönyve</PageCover>,\r\n      <Page key={1} imageCaption={\"Tartalomjegyzék\"}>\r\n        <ol>\r\n          <li>Önéletrajz</li>\r\n          <li>Tengerparton</li>\r\n          <li>Cserépedények</li>\r\n          <li>Virágok az ablakban</li>\r\n          <li>Délben</li>\r\n        </ol>\r\n      </Page>,\r\n      <Page key={2} number={1} imageCaption={\"Önéletrajz\"}>\r\n        <article style={{ padding: '2%' }}>\r\n          <span>Alim Adilov, magyar szórenddel Adilov Alim (Taskent, 1963– ) Magyarországon élő üzbég festőművész.</span>\r\n          <h4>Élete</h4>\r\n          <span>\r\n            1963-ban született Üzbegisztán fővárosában, Taskentben, édesapja grafikus, édesanyja iparművész volt. Gyermekéveit is ott töltötte, szülei hatására már akkor sokat rajzolt, céltudatosan művész akart lenni. Ennek érdekében több rajzszakkörbe is járt, majd egy képzőművészeti középiskolában érettségizett; mindig törekedett arra, hogy a kiválóak közül is a legjobb legyen. Katonai szolgálatát Kazahsztánban teljesítette, majd a szentpétervári Repin Képzőművészeti Akadémián végezte tanulmányait, mesterei Mojszenkó és Vitrugatszkij voltak. 1991 és 1993 között a londoni akadémián fejlesztette tovább a tudását, egy ottani kétéves kurzus elvégzésével.\r\n                <br />\r\n                1993-ban Magyarországon települt le; 2003-ban költözött Solymárra, szándéka szerint hosszú időre; választásában motiválta Budapest közelsége mellett a szép környezet, és a táj nyugalma, inspiráló békéje is. 2004 óta tagja a Magyar Alkotóművészek Országos Egyesületének.\r\n              </span>\r\n        </article>\r\n      </Page>,\r\n      <Page key={3} number={2} image={process.env.PUBLIC_URL + \"/h608.jpg\"} imageCaption={\"Tengerparton\"}></Page>,\r\n      <Page key={4} number={3} image={process.env.PUBLIC_URL + \"/h503.jpg\"} imageCaption={\"Cserépedények\"}></Page>,\r\n      <Page key={5} number={4} image={process.env.PUBLIC_URL + \"/h607.jpg\"} imageCaption={\"Virágok az ablakban\"}></Page>,\r\n      <Page key={6} number={5} image={process.env.PUBLIC_URL + \"/f1014.jpg\"} imageCaption={\"Délben\"}></Page>,\r\n      <PageCover key={7} pos=\"bottom\">  </PageCover>\r\n    ]\r\n\r\n    this.state = {\r\n      page: 0,\r\n      totalPage: 0,\r\n      orientation: 'landscape',\r\n      state: 'read',\r\n      pages: pages\r\n    };\r\n  }\r\n\r\n  nextButtonClick = () => {\r\n    this.flipBook.getPageFlip().flipNext();\r\n  };\r\n\r\n  prevButtonClick = () => {\r\n    this.flipBook.getPageFlip().flipPrev();\r\n  };\r\n\r\n  renderFullScreen = () => {\r\n    document.getElementsByTagName('HTMLFlipBook')[0].requestFullscreen();\r\n  }\r\n\r\n  onPage = (e) => {\r\n    this.setState({\r\n      page: e.data,\r\n    });\r\n  };\r\n\r\n  onChangeOrientation = (e) => {\r\n    this.setState({\r\n      orientation: e.data,\r\n    });\r\n  }\r\n\r\n  onChangeState = (e) => {\r\n    this.setState({\r\n      state: e.data,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('TODO: Fork page-flip and react-pageflip and make an option to flip only if the clicked element is not an image (UI/UI.ts onMouseUp)');\r\n    console.log('TODO: on image click make it appear in full size in a popup)');\r\n    this.setState({\r\n      totalPage: this.flipBook.getPageFlip().getPageCount(),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-md no-select book-container\" style={{ maxHeight: '100vh', maxWidth: '100vw', display: 'flex', flexDirection: 'column', alignItems: 'center', position: 'relative' }}>\r\n        <HTMLFlipBook\r\n          width={700}\r\n          height={900}\r\n          minWidth={300}\r\n          maxWidth={1000}\r\n          minHeight={400}\r\n          maxHeight={1700}\r\n          // size=\"stretch\"\r\n          maxShadowOpacity={0.5}\r\n          showCover={true}\r\n          mobileScrollSupport={true}\r\n          // drawShadow={true}\r\n          onFlip={this.onPage}\r\n          onChangeOrientation={this.onChangeOrientation}\r\n          onChangeState={this.onChangeState}\r\n          className=\"image-book flip-book html-book\"\r\n          style={{ backgroundImage: \"url(https://cssauthor.com/wp-content/uploads/2015/10/Old-painted-wood.jpg)\" }}\r\n\r\n          ref={(el) => (this.flipBook = el)}\r\n        >\r\n          {this.state.pages}\r\n        </HTMLFlipBook>\r\n\r\n        <div className=\"pageturner-container\">\r\n          <div>\r\n\r\n            <button type=\"button\" onClick={this.prevButtonClick}>Előző oldal</button>\r\n\r\n            [<span>{this.state.page}</span> of <span> {this.state.totalPage} </span>]\r\n\r\n            <button type=\"button\" onClick={this.nextButtonClick}>Következő oldal</button>\r\n\r\n            {/* <button type=\"button\" onClick={this.renderFullScreen}>Teljes képernyős mód</button> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageBook;","// import React from \"react\";\r\n// import HTMLFlipBook from \"react-pageflip\";\r\n// import \"./DemoBlock.scss\";\r\n\r\n// const PageCover = React.forwardRef((props, ref) => {\r\n//   return (\r\n//     <div className={\"page page-cover page-cover-\" + props.pos} ref={ref} data-density=\"hard\">\r\n//       <div className=\"page-content\">\r\n//         <h2>{props.children}</h2>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// });\r\n\r\n// const Page = React.forwardRef((props, ref) => {\r\n//   return (\r\n//     <div className=\"page\" ref={ref} data-density={props.density | \"soft\"}>\r\n//       <div className=\"page-content\">\r\n//         <h2 className=\"page-header\">Page header - {props.number}</h2>\r\n//         <div\r\n//           className=\"page-image\"\r\n//           style={{ backgroundImage: \"url(images/html/\" + props.image + \")\" }}\r\n//         ></div>\r\n//         <div className=\"page-text\">{props.children}</div>\r\n//         <div className=\"page-footer\">{props.number + 1}</div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// });\r\n\r\n// class DemoBlock extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     const pages = [<PageCover key={0} pos=\"top\">BOOK TITLE</PageCover>];\r\n\r\n//     let pageNum = 0;\r\n//     for (let i = 0; i < 100; i++) {\r\n//       pageNum++;\r\n//       if (pageNum > 8) pageNum = 1;\r\n//       pages.push(<Page key={i + 1} image={(pageNum) + \".jpg\"} number={i + 1}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In cursus mollis nibh, non convallis ex convallis eu. Suspendisse potenti. Aenean vitae pellentesque erat. Integer non tristique quam. Suspendisse rutrum, augue ac sollicitudin mollis, eros velit viverra metus, a venenatis tellus tellus id magna. Aliquam ac nulla rhoncus, accumsan eros sed, viverra enim. Pellentesque non justo vel nibh sollicitudin pharetra suscipit ut ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In cursus mollis nibh, non convallis ex convallis eu. Suspendisse potenti. Aenean vitae pellentesque erat. Integer non tristique quam. Suspendisse rutrum, augue ac sollicitudin mollis, eros velit viverra metus, a venenatis tellus tellus id magna.</Page>);\r\n//     }\r\n\r\n//     pages.push(<PageCover key={101} pos=\"bottom\">THE END</PageCover>);\r\n\r\n//     this.state = {\r\n//       page: 0,\r\n//       totalPage: 0,\r\n//       orientation: 'landscape',\r\n//       state: 'read',\r\n//       pages: pages\r\n//     };\r\n//   }\r\n\r\n//   nextButtonClick = () => {\r\n//     this.flipBook.getPageFlip().flipNext();\r\n//   }\r\n\r\n//   prevButtonClick = () => {\r\n//     this.flipBook.getPageFlip().flipPrev();\r\n//   }\r\n\r\n//   onPage = (e) => {\r\n//     this.setState({\r\n//       page: e.data,\r\n//     });\r\n//   }\r\n\r\n//   onChangeOrientation = (e) => {\r\n//     this.setState({\r\n//       orientation: e.data,\r\n//     });\r\n//   }\r\n\r\n//   onChangeState = (e) => {\r\n//     this.setState({\r\n//       state: e.data,\r\n//     });\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     this.setState({\r\n//       totalPage: this.flipBook.getPageFlip().getPageCount(),\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <div className=\"container-md\" style={{ position: \"relative\" }}>\r\n//           <HTMLFlipBook\r\n//             width={550}\r\n//             height={733}\r\n//             size=\"stretch\"\r\n//             minWidth={315}\r\n//             maxWidth={1000}\r\n//             minHeight={400}\r\n//             maxHeight={1533}\r\n//             maxShadowOpacity={0.5}\r\n//             showCover={true}\r\n//             mobileScrollSupport={true}\r\n\r\n//             onFlip={this.onPage}\r\n//             onChangeOrientation={this.onChangeOrientation}\r\n//             onChangeState={this.onChangeState}\r\n\r\n//             className=\"flip-book html-book demo-book\"\r\n//             style={{ backgroundImage: \"url(images/background.jpg)\" }}\r\n\r\n//             ref={(el) => this.flipBook = el}\r\n//           >\r\n//             {this.state.pages}\r\n//           </HTMLFlipBook>\r\n//         </div>\r\n\r\n//         <div className=\"container mt-3\">\r\n//           <div className=\"row\">\r\n//             <div className=\"col-md-6\">\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"btn btn-info btn-sm btn-prev\"\r\n//                 onClick={this.prevButtonClick}\r\n//               >\r\n//                 Previous page\r\n//               </button>\r\n//                 [<span>{this.state.page + 1}</span> of <span>{this.state.totalPage}</span>]\r\n//               <button\r\n//                 type=\"button\"\r\n//                 className=\"btn btn-info btn-sm btn-next\"\r\n//                 onClick={this.nextButtonClick}\r\n//               >\r\n//                 Next page\r\n//               </button>\r\n//             </div>\r\n//             <div className=\"col-md-6\">\r\n//               State: <i>{this.state.state}</i>, orientation: <i>{this.state.orientation}</i>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default DemoBlock;\r\n\r\n\r\nimport React from \"react\";\r\nimport HTMLFlipBook from \"react-pageflip\";\r\n// import \"./DemoBlock.scss\";\r\n\r\nconst PageCover = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className={\"page page-cover page-cover-\" + props.pos} ref={ref} data-density=\"hard\">\r\n      <div className=\"page-content\">\r\n        <h2>{props.children}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Page = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className=\"page\" ref={ref} data-density={props.density | \"soft\"}>\r\n      <div className=\"page-content\">\r\n        <h2 className=\"page-header\">Page header - {props.number}</h2>\r\n        <div\r\n          className=\"page-image\"\r\n          style={{ backgroundImage: \"url(images/html/\" + props.image + \")\" }}\r\n        ></div>\r\n        <div className=\"page-text\">{props.children}</div>\r\n        <div className=\"page-footer\">{props.number + 1}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nclass DemoBlock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const pages = [<PageCover key={0} pos=\"top\">BOOK TITLE</PageCover>];\r\n\r\n    let pageNum = 0;\r\n    for (let i = 0; i < 100; i++) {\r\n      pageNum++;\r\n      if (pageNum > 8) pageNum = 1;\r\n      pages.push(<Page key={i + 1} image={(pageNum) + \".jpg\"} number={i + 1}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. In cursus mollis nibh, non convallis ex convallis eu. Suspendisse potenti. Aenean vitae pellentesque erat. Integer non tristique quam. Suspendisse rutrum, augue ac sollicitudin mollis, eros velit viverra metus, a venenatis tellus tellus id magna. Aliquam ac nulla rhoncus, accumsan eros sed, viverra enim. Pellentesque non justo vel nibh sollicitudin pharetra suscipit ut ipsum. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In cursus mollis nibh, non convallis ex convallis eu. Suspendisse potenti. Aenean vitae pellentesque erat. Integer non tristique quam. Suspendisse rutrum, augue ac sollicitudin mollis, eros velit viverra metus, a venenatis tellus tellus id magna.</Page>);\r\n    }\r\n\r\n    pages.push(<PageCover key={101} pos=\"bottom\">THE END</PageCover>);\r\n\r\n    this.state = {\r\n      page: 0,\r\n      totalPage: 0,\r\n      orientation: 'landscape',\r\n      state: 'read',\r\n      pages: pages\r\n    };\r\n  }\r\n\r\n  nextButtonClick = () => {\r\n    this.flipBook.getPageFlip().flipNext();\r\n  }\r\n\r\n  prevButtonClick = () => {\r\n    this.flipBook.getPageFlip().flipPrev();\r\n  }\r\n\r\n  onPage = (e) => {\r\n    this.setState({\r\n      page: e.data,\r\n    });\r\n  }\r\n\r\n  onChangeOrientation = (e) => {\r\n    this.setState({\r\n      orientation: e.data,\r\n    });\r\n  }\r\n\r\n  onChangeState = (e) => {\r\n    this.setState({\r\n      state: e.data,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      totalPage: this.flipBook.getPageFlip().getPageCount(),\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container-md\" style={{ position: \"relative\" }}>\r\n          <HTMLFlipBook\r\n            width={550}\r\n            height={733}\r\n            size=\"stretch\"\r\n            minWidth={315}\r\n            maxWidth={1000}\r\n            minHeight={400}\r\n            maxHeight={1533}\r\n            maxShadowOpacity={0.5}\r\n            showCover={true}\r\n            mobileScrollSupport={true}\r\n\r\n            onFlip={this.onPage}\r\n            onChangeOrientation={this.onChangeOrientation}\r\n            onChangeState={this.onChangeState}\r\n\r\n            className=\"flip-book html-book demo-book\"\r\n            style={{ backgroundImage: \"url(images/background.jpg)\" }}\r\n\r\n            ref={(el) => this.flipBook = el}\r\n          >\r\n            {this.state.pages}\r\n          </HTMLFlipBook>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DemoBlock;","import logo from './logo.svg';\r\nimport './App.scss';\r\nimport React, { Component } from 'react'\r\nimport ImageBook from './ImageBook/ImageBook';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\" >\r\n        <div style={{ margin: '3rem' }}>\r\n          <ImageBook />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport DemoBlock from './DemoBlock';\nimport reportWebVitals from './reportWebVitals';\nimport ImageBook from './ImageBook/ImageBook';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    {/* <DemoBlock /> */}\n    <ImageBook />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}